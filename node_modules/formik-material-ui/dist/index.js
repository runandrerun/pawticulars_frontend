'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var React = require('react');
var React__default = _interopDefault(React);
var MuiTextField = _interopDefault(require('@material-ui/core/TextField'));
var MuiSwitch = _interopDefault(require('@material-ui/core/Switch'));
var MuiCheckbox = _interopDefault(require('@material-ui/core/Checkbox'));
var MuiSelect = _interopDefault(require('@material-ui/core/Select'));
var FormControl = _interopDefault(require('@material-ui/core/FormControl'));
var InputLabel = _interopDefault(require('@material-ui/core/InputLabel'));
var Input = _interopDefault(require('@material-ui/core/Input'));
var FormHelperText = _interopDefault(require('@material-ui/core/FormHelperText'));

/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
}

var TextField = function (_a) {
    var field = _a.field, form = _a.form, _b = _a.disabled, disabled = _b === void 0 ? false : _b, props = __rest(_a, ["field", "form", "disabled"]);
    var name = field.name;
    var touched = form.touched, errors = form.errors, isSubmitting = form.isSubmitting;
    return (React.createElement(MuiTextField, __assign({}, props, field, { error: touched[name] && !!errors[name], helperText: touched[name] && errors[name] ? errors[name] : props.helperText, disabled: isSubmitting || disabled })));
};
TextField.displayName = 'FormikMaterialUITextField';

var Switch = function (_a) {
    var field = _a.field, isSubmitting = _a.form.isSubmitting, _b = _a.disabled, disabled = _b === void 0 ? false : _b, props = __rest(_a, ["field", "form", "disabled"]);
    return (React.createElement(MuiSwitch, __assign({ disabled: isSubmitting || disabled }, props, field, { value: field.value ? 'checked' : '' })));
};
Switch.displayName = 'FormikMaterialUISwitch';

var Checkbox = function (_a) {
    var field = _a.field, isSubmitting = _a.form.isSubmitting, _b = _a.disabled, disabled = _b === void 0 ? false : _b, props = __rest(_a, ["field", "form", "disabled"]);
    return (React.createElement(MuiCheckbox, __assign({ disabled: isSubmitting || disabled }, props, field, { value: field.value ? 'checked' : '' })));
};
Checkbox.displayName = 'FormikMaterialUICheckbox';

var Select = function (_a) {
    var field = _a.field, isSubmitting = _a.form.isSubmitting, _b = _a.disabled, disabled = _b === void 0 ? false : _b, props = __rest(_a, ["field", "form", "disabled"]);
    return React.createElement(MuiSelect, __assign({ disabled: isSubmitting || disabled }, props, field));
};
Select.displayName = 'FormikMaterialUISelect';

var SimpleFileUpload = (function (_a) {
    var label = _a.label, field = _a.field, _b = _a.form, touched = _b.touched, errors = _b.errors, isSubmitting = _b.isSubmitting, setFieldValue = _b.setFieldValue, _c = _a.disabled, disabled = _c === void 0 ? false : _c;
    var error = touched[field.name] && errors[field.name];
    return (React__default.createElement("div", null,
        React__default.createElement(FormControl, null,
            label && (React__default.createElement(InputLabel, { shrink: true, error: !!error }, label)),
            React__default.createElement(Input, { error: !!error, inputProps: {
                    type: 'file',
                    disabled: disabled || isSubmitting,
                    name: field.name,
                    onChange: function (event) {
                        var file = event.currentTarget.files[0];
                        setFieldValue(field.name, file);
                    },
                } }),
            error && React__default.createElement(FormHelperText, { error: true }, error))));
});

exports.TextField = TextField;
exports.Switch = Switch;
exports.Checkbox = Checkbox;
exports.Select = Select;
exports.SimpleFileUpload = SimpleFileUpload;
//# sourceMappingURL=index.js.map
